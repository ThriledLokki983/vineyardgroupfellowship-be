# Generated by Django 5.2.7 on 2025-10-21 19:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent_type', models.CharField(choices=[('privacy_policy', 'Privacy Policy'), ('terms_of_service', 'Terms of Service'), ('data_processing', 'Data Processing'), ('marketing', 'Marketing Communications'), ('research', 'Research Participation'), ('cookies', 'Cookie Usage'), ('analytics', 'Analytics Tracking')], help_text='Type of consent being tracked', max_length=20)),
                ('action', models.CharField(choices=[('given', 'Consent Given'), ('withdrawn', 'Consent Withdrawn'), ('updated', 'Consent Updated'), ('expired', 'Consent Expired')], help_text='Action taken on consent', max_length=20)),
                ('consent_given', models.BooleanField(help_text='Whether consent was given (True) or withdrawn (False)')),
                ('version', models.CharField(blank=True, help_text='Version of document/policy consented to', max_length=10)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address when consent was given/withdrawn', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='Browser/device information when consent was recorded')),
                ('reason', models.TextField(blank=True, help_text='Reason for consent withdrawal or update')),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this consent expires (if applicable)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this consent action was recorded')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consent_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'privacy_consent_log',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'consent_type'], name='privacy_con_user_id_02c328_idx'), models.Index(fields=['created_at'], name='privacy_con_created_c9c0f6_idx'), models.Index(fields=['expires_at'], name='privacy_con_expires_e1debf_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataProcessingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(choices=[('account_management', 'Account Management'), ('service_provision', 'Service Provision'), ('communication', 'Communication'), ('analytics', 'Analytics'), ('marketing', 'Marketing'), ('research', 'Research'), ('legal_compliance', 'Legal Compliance'), ('security', 'Security'), ('recovery_support', 'Recovery Support')], help_text='Purpose for processing this data', max_length=30)),
                ('data_categories', models.TextField(help_text='Categories of data being processed (JSON list)')),
                ('legal_basis', models.CharField(choices=[('consent', 'Consent'), ('contract', 'Contract Performance'), ('legal_obligation', 'Legal Obligation'), ('vital_interests', 'Vital Interests'), ('public_task', 'Public Task'), ('legitimate_interests', 'Legitimate Interests')], help_text='Legal basis for processing under GDPR', max_length=50)),
                ('retention_period_days', models.PositiveIntegerField(blank=True, help_text='How long this data will be retained (days)', null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True, help_text='When processing started')),
                ('ended_at', models.DateTimeField(blank=True, help_text='When processing ended', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether processing is currently active')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this processing activity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_processing_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'privacy_data_processing_record',
                'indexes': [models.Index(fields=['user', 'is_active'], name='privacy_dat_user_id_25683c_idx'), models.Index(fields=['purpose'], name='privacy_dat_purpose_f19635_idx'), models.Index(fields=['started_at'], name='privacy_dat_started_081ecb_idx')],
            },
        ),
        migrations.CreateModel(
            name='PrivacyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privacy_policy_accepted', models.BooleanField(default=False, help_text='User has accepted the current privacy policy')),
                ('privacy_policy_accepted_at', models.DateTimeField(blank=True, help_text='When user accepted privacy policy', null=True)),
                ('privacy_policy_version', models.CharField(blank=True, help_text="Version of privacy policy accepted (e.g., '1.2')", max_length=10)),
                ('terms_of_service_accepted', models.BooleanField(default=False, help_text='User has accepted the current terms of service')),
                ('terms_of_service_accepted_at', models.DateTimeField(blank=True, help_text='When user accepted terms of service', null=True)),
                ('terms_of_service_version', models.CharField(blank=True, help_text='Version of terms of service accepted', max_length=10)),
                ('data_processing_consent', models.BooleanField(default=False, help_text='Consent for processing personal data')),
                ('data_processing_consent_at', models.DateTimeField(blank=True, help_text='When data processing consent was given', null=True)),
                ('marketing_consent', models.BooleanField(default=False, help_text='Consent for marketing communications')),
                ('marketing_consent_at', models.DateTimeField(blank=True, help_text='When marketing consent was given', null=True)),
                ('research_participation_consent', models.BooleanField(default=False, help_text='Consent for participation in research studies')),
                ('research_participation_consent_at', models.DateTimeField(blank=True, help_text='When research consent was given', null=True)),
                ('profile_visibility', models.CharField(choices=[('private', 'Private - Only visible to me'), ('friends', 'Friends - Visible to my connections'), ('community', 'Community - Visible to community members'), ('public', 'Public - Visible to everyone')], default='community', help_text="Who can see user's profile information", max_length=20)),
                ('recovery_info_visibility', models.CharField(choices=[('private', 'Private - Only visible to me'), ('friends', 'Friends - Visible to my connections'), ('supporters', 'Supporters - Visible to verified supporters'), ('community', 'Community - Visible to community members')], default='private', help_text='Who can see recovery information and progress', max_length=20)),
                ('contact_preferences', models.CharField(choices=[('no_contact', "No Contact - Don't contact me"), ('email_only', 'Email Only - Emergency notifications only'), ('limited', 'Limited - Important updates only'), ('normal', 'Normal - Regular communications'), ('all', 'All - All communications and updates')], default='normal', help_text='Communication preferences for platform notifications', max_length=20)),
                ('data_retention_preference', models.CharField(choices=[('minimal', 'Minimal - 1 year retention'), ('standard', 'Standard - 3 years retention'), ('extended', 'Extended - 7 years retention'), ('permanent', 'Permanent - Keep until deletion request')], default='standard', help_text='How long to retain user data', max_length=20)),
                ('auto_delete_inactive_data', models.BooleanField(default=True, help_text='Automatically delete data after retention period')),
                ('deletion_requested', models.BooleanField(default=False, help_text='User has requested account deletion')),
                ('deletion_requested_at', models.DateTimeField(blank=True, help_text='When account deletion was requested', null=True)),
                ('deletion_scheduled_for', models.DateTimeField(blank=True, help_text='When account will be automatically deleted', null=True)),
                ('data_export_requested', models.BooleanField(default=False, help_text='User has requested data export')),
                ('data_export_requested_at', models.DateTimeField(blank=True, help_text='When data export was requested', null=True)),
                ('anonymize_posts_on_deletion', models.BooleanField(default=True, help_text='Anonymize posts instead of deleting them')),
                ('anonymize_recovery_data', models.BooleanField(default=False, help_text='Allow anonymized recovery data for research')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consent_withdrawn_at', models.DateTimeField(blank=True, help_text='When user withdrew consent for data processing', null=True)),
                ('consent_withdrawal_reason', models.TextField(blank=True, help_text='Reason for withdrawing consent')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='privacy_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'privacy_profile',
                'indexes': [models.Index(fields=['user'], name='privacy_pro_user_id_83892e_idx'), models.Index(fields=['privacy_policy_accepted'], name='privacy_pro_privacy_cb7dcb_idx'), models.Index(fields=['deletion_requested'], name='privacy_pro_deletio_4bd014_idx'), models.Index(fields=['deletion_scheduled_for'], name='privacy_pro_deletio_69f7b6_idx')],
            },
        ),
    ]
